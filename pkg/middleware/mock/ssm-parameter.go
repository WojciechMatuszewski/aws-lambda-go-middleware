// Code generated by MockGen. DO NOT EDIT.
// Source: ../ssm-parameter.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockParameterGetter is a mock of ParameterGetter interface
type MockParameterGetter struct {
	ctrl     *gomock.Controller
	recorder *MockParameterGetterMockRecorder
}

// MockParameterGetterMockRecorder is the mock recorder for MockParameterGetter
type MockParameterGetterMockRecorder struct {
	mock *MockParameterGetter
}

// NewMockParameterGetter creates a new mock instance
func NewMockParameterGetter(ctrl *gomock.Controller) *MockParameterGetter {
	mock := &MockParameterGetter{ctrl: ctrl}
	mock.recorder = &MockParameterGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockParameterGetter) EXPECT() *MockParameterGetterMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MockParameterGetter) Get(ctx context.Context, name string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, name)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockParameterGetterMockRecorder) Get(ctx, name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockParameterGetter)(nil).Get), ctx, name)
}
